Traceback (most recent call last):
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/joshredmond/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import rasterio as rio
m = Map(center=center, zoom=15)

ndvi_reader = rio.open('data/leeds_NDVI_aug_highres.tif')

metadata = ndvi_reader.profile
bounds = ndvi_reader.bounds

# ipyleaflet cant work with geotiffs directly, we have to do some covnersions before we can place the image on the map
# First, we need to convert the bounds to the correct format so the map knows where to draw the image

SW = (bounds.bottom, bounds.left)
NE = (bounds.top, bounds.right)
bounds_tuple = (SW, NE)

# Next, we need to convert the image to a format that the map can understand
# We will use the rasterio function to convert the image to a numpy array
# Then, we will convert it to a jpeg using the PIL library
# This is because most browsers cannot show TIFF files, so adding a TIFF file will mean we can't see what is going on 

import numpy as np
from PIL import Image

array = ndvi_reader.read()
array = np.moveaxis(array, 0, -1)

nan_mask = ~np.isnan(array) * 1 
nan_mask *= 255
nan_mask = nan_mask.astype(np.uint8)
array = np.nan_to_num(array)
# We need to move the axis of the array so that the color channel is the last axis

# We need to scale the values in the array to be between 0 and 255 to be viewable as an image
array_max = np.max(array)
array_min = np.min(array)
array = np.clip((array - array_min) / (array_max - array_min) * 255, 0, 255)
array = array.astype(np.uint8)
# Now we can convert the array to a jpeg
image = Image.fromarray(np.squeeze(np.stack([array, array, array, nan_mask], axis=-1)), mode="RGBA")

# Sadly, we cannot add the image array directly to the map, we have to load it from a url 
# So we need to save the file as a jpeg

jpeg_path_temp = image.save("temp.png", mode="png")

# Now we can add the image to the map
image_layer = ImageOverlay(url="temp.png", bounds=bounds_tuple)
m.add_layer(image_layer)
ndvi_reader.close()
display(m)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mCPLE_OpenFailedError[0m                      Traceback (most recent call last)
File [0;32mrasterio/_base.pyx:261[0m, in [0;36mrasterio._base.DatasetBase.__init__[0;34m()[0m

File [0;32mrasterio/_shim.pyx:78[0m, in [0;36mrasterio._shim.open_dataset[0;34m()[0m

File [0;32mrasterio/_err.pyx:216[0m, in [0;36mrasterio._err.exc_wrap_pointer[0;34m()[0m

[0;31mCPLE_OpenFailedError[0m: data/leeds_NDVI_aug_highres.tif: No such file or directory

During handling of the above exception, another exception occurred:

[0;31mRasterioIOError[0m                           Traceback (most recent call last)
Cell [0;32mIn[3], line 4[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01mrasterio[39;00m [38;5;28;01mas[39;00m [38;5;21;01mrio[39;00m
[1;32m      2[0m m [38;5;241m=[39m Map(center[38;5;241m=[39mcenter, zoom[38;5;241m=[39m[38;5;241m15[39m)
[0;32m----> 4[0m ndvi_reader [38;5;241m=[39m [43mrio[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mdata/leeds_NDVI_aug_highres.tif[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m      6[0m metadata [38;5;241m=[39m ndvi_reader[38;5;241m.[39mprofile
[1;32m      7[0m bounds [38;5;241m=[39m ndvi_reader[38;5;241m.[39mbounds

File [0;32m~/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/rasterio/env.py:437[0m, in [0;36mensure_env_with_credentials.<locals>.wrapper[0;34m(*args, **kwds)[0m
[1;32m    434[0m     session [38;5;241m=[39m DummySession()
[1;32m    436[0m [38;5;28;01mwith[39;00m env_ctor(session[38;5;241m=[39msession):
[0;32m--> 437[0m     [38;5;28;01mreturn[39;00m [43mf[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m)[49m

File [0;32m~/anaconda3/envs/GIScienceWorkshop/lib/python3.10/site-packages/rasterio/__init__.py:220[0m, in [0;36mopen[0;34m(fp, mode, driver, width, height, count, crs, transform, dtype, nodata, sharing, **kwargs)[0m
[1;32m    216[0m [38;5;66;03m# Create dataset instances and pass the given env, which will[39;00m
[1;32m    217[0m [38;5;66;03m# be taken over by the dataset's context manager if it is not[39;00m
[1;32m    218[0m [38;5;66;03m# None.[39;00m
[1;32m    219[0m [38;5;28;01mif[39;00m mode [38;5;241m==[39m [38;5;124m'[39m[38;5;124mr[39m[38;5;124m'[39m:
[0;32m--> 220[0m     s [38;5;241m=[39m [43mDatasetReader[49m[43m([49m[43mpath[49m[43m,[49m[43m [49m[43mdriver[49m[38;5;241;43m=[39;49m[43mdriver[49m[43m,[49m[43m [49m[43msharing[49m[38;5;241;43m=[39;49m[43msharing[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    221[0m [38;5;28;01melif[39;00m mode [38;5;241m==[39m [38;5;124m"[39m[38;5;124mr+[39m[38;5;124m"[39m:
[1;32m    222[0m     s [38;5;241m=[39m get_writer_for_path(path, driver[38;5;241m=[39mdriver)(
[1;32m    223[0m         path, mode, driver[38;5;241m=[39mdriver, sharing[38;5;241m=[39msharing, [38;5;241m*[39m[38;5;241m*[39mkwargs
[1;32m    224[0m     )

File [0;32mrasterio/_base.pyx:263[0m, in [0;36mrasterio._base.DatasetBase.__init__[0;34m()[0m

[0;31mRasterioIOError[0m: data/leeds_NDVI_aug_highres.tif: No such file or directory

